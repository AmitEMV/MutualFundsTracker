@page "/"
@using MutualFundsTracker.Models
@using System.Globalization
@inject NavigationManager navigationManager
@inject FundsService fundsService
@inject AutoCompleteService autoCompleteService


<h6>Hi, Amit</h6>
<hr style="margin-top:0;" />

<div class="row" style="justify-content:center;padding-left:10%;padding-right:10%;padding-bottom: 5%;margin:auto">
    <div class="col">
        <div class="e-input-group">
            <RadzenAutoComplete Data=@FundNamesSuggestion TextProperty="FundName" Placeholder="Search Mutual Funds ..." FilterOperator="StringFilterOperator.StartsWith" Style="width: 100%; font-size: 14px;" />
        </div>

        <div class="row" style="padding-left:0;padding-right:0;margin:auto;">
            <div id="totalvaluediv" class="rounded summarybox" style="display: -webkit-flex; align-items: center; -webkit-box-pack: center; justify-content: center;width:100%">
                <label style="margin-top:10px;font-size: 14px;">Total account value is &#8377; @TotalValue</label>
                <RadzenButton Text="Details" ButtonStyle="ButtonStyle.Info" Click="NavigateToPortfolioPage"
                              Style="margin-left: 20px;background: #0479cc; margin-top: 5px;" />
            </div>
        </div>
        <br />

        <div class="row" style="padding-left:0;padding-right:0;margin:auto;">
            <label style="margin-left: auto; margin-right: auto; margin-top: 10px; text-decoration: underline; font-size: 14px;">Account value trend for the last 12 months</label>
        </div>
        <br />
        <div class="row" style="padding-left:0;padding-right:0;margin:auto;">
            <div class="col rounded" style="font-size: 12px; width:100%;height: auto;background-color: white;">
                <RadzenChart @ref="areaChart" Style="width: 100%; padding: 0px; margin: 0px;">
                    <RadzenAreaSeries Smooth=true Data="@PortfolioValueTrend" CategoryProperty="Date" ValueProperty="Amount"
                                      Fill="#0479cc !important" Title="Value" StrokeWidth="0" />
                    <RadzenCategoryAxis FormatString="{0:dd/MM}" />
                    <RadzenValueAxis Formatter="@FormatAsINR">
                        <RadzenGridLines Visible="true" />
                    </RadzenValueAxis>
                    <RadzenLegend Visible="false" />
                </RadzenChart>
            </div>
        </div>
        <br />

        <div class="row" style="padding-left:0;padding-right:0;margin:auto;">
            <label style="margin-left: auto; margin-right: auto; margin-top: 10px; text-decoration: underline; font-size: 14px;">Top gainers for the last 12 months</label>
        </div>
        <br />
        <div class="row" style="padding-left:0;padding-right:0;margin:auto;">
            <div class="col" style="padding:0; width:100%;height: auto;">
                <RadzenGrid @ref="gainersFundsGrid" AllowFiltering="false" AllowPaging="false" AllowSorting="true" Data="@GainersFundsData"
                            TItem="FundPerformance" Responsive="false" Style="font-size: 14px;width:inherit">
                    <Columns>
                        <RadzenGridColumn TItem="FundPerformance" Property="FundName" Title="Fund Name"
                                          TextAlign="Radzen.TextAlign.Center" Sortable="false" />
                        <RadzenGridColumn TItem="FundPerformance" Property="Return" Title="Absolute Returns (%)" TextAlign="Radzen.TextAlign.Center" />
                    </Columns>
                </RadzenGrid>
            </div>
        </div>
        <br />

        <div class="row" style="padding-left:0;padding-right:0;margin:auto;">
            <label style="margin-left: auto; margin-right: auto; margin-top: 10px; text-decoration: underline; font-size: 14px;">Top losers for the last 12 months</label>
        </div>
        <br/>
        <div class="row" style="padding-left:0;padding-right:0;margin:auto;">
            <div class="col" style="padding:0; width: 100%; height: auto;">
                <RadzenGrid @ref="losersFundsGrid" AllowFiltering="false" AllowPaging="false" AllowSorting="true" Data="@LosersFundsData"
                            TItem="FundPerformance" Responsive="false" Style="font-size: 14px;width:inherit">
                    <Columns>
                        <RadzenGridColumn TItem="FundPerformance" Property="FundName" Title="Fund Name"
                                          TextAlign="Radzen.TextAlign.Center" Sortable="false" />
                        <RadzenGridColumn TItem="FundPerformance" Property="Return" Title="Absolute Returns (%)" TextAlign="Radzen.TextAlign.Center" />
                    </Columns>
                </RadzenGrid>
            </div>
        </div>

    </div>
</div>

@code {

    string TotalValue { get; set; }
    List<AutoCompleteSuggestion> FundNamesSuggestion = new List<AutoCompleteSuggestion>();
    string SelectedFund { get; set; }
    ValueTrend[] PortfolioValueTrend;
    RadzenChart areaChart;
    RadzenGrid<FundPerformance> gainersFundsGrid;
    RadzenGrid<FundPerformance> losersFundsGrid;
    List<FundPerformance> GainersFundsData;
    List<FundPerformance> LosersFundsData;

    protected override async Task OnInitializedAsync()
    {
        await GetMutualFundSuggestionsAsync();
        await GetTotalValueAsync();
        await GetTotalValueTrendAsync();
        await GetFundsPerformanceAsync();
    }

    async Task GetTotalValueAsync()
    {
        TotalValue = await fundsService.GetTotalValueAsync();
    }

    async Task GetTotalValueTrendAsync()
    {
        PortfolioValueTrend = await fundsService.GetTotalValueTrendAsync();
        areaChart.Reload();
    }

    async Task GetMutualFundSuggestionsAsync()
    {
        List<string> fundsList = await autoCompleteService.GetSuggestions();
        foreach (string fund in fundsList)
        {
            FundNamesSuggestion.Add(new AutoCompleteSuggestion()
            {
                FundName = fund
            });
        }
    }

    async Task GetFundsPerformanceAsync()
    {
        GainersFundsData = await fundsService.GetFundPerformanceAsync("GetTopGainers");
        LosersFundsData = await fundsService.GetFundPerformanceAsync("GetTopLosers");
        await gainersFundsGrid.Reload();
        await losersFundsGrid.Reload();
    }

    string FormatAsINR(object value)
    {
        return ((double)value).ToString("C0", CultureInfo.CreateSpecificCulture("en-IN"));
    }

    void NavigateToPortfolioPage()
    {
        navigationManager.NavigateTo("/portfolio");
    }

}
